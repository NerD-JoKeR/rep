{"ast":null,"code":"import { callWebService } from './ws-services';\nexport async function getCountries(sessionId) {\n  const wsBody = '<ws:cabCountryRequest>' + '<ws:sessionId>' + sessionId + '</ws:sessionId>' + '</ws:cabCountryRequest>';\n  const xml = callWebService(wsBody, sessionId);\n  const countriesXml = xml.getElementsByTagName('ns2:countries');\n  const countries = countriesXml.map(countryXml => {\n    const codeXml = countryXml.getElementsByTagName('ns2:codeOfCountry');\n    const nameXml = countryXml.getElementsByTagName('ns2:nameOfCountry');\n    const territoryXml = countryXml.getElementsByTagName('ns2:territoryCountry');\n    return {\n      code: codeXml[0] && codeXml[0].value,\n      name: nameXml[0] && nameXml[0].value,\n      territory: territoryXml[0] && territoryXml[0].value\n    };\n  });\n  return countries;\n}\nexport async function registrateTravelInsurance(sessionId, {\n  country1,\n  country2,\n  country3,\n  rprogSrok,\n  email,\n  rprogramm,\n  progMaxDays,\n  dateStart,\n  dateEnd,\n  curRate,\n  fioKir,\n  fioLat,\n  iin,\n  resId,\n  address,\n  sex,\n  dateBirth,\n  region,\n  fioKir2,\n  fioLat2,\n  iin2,\n  resId2,\n  address2,\n  sex2,\n  dateBirth2,\n  region2,\n  passportNum,\n  passportGive,\n  passportDate,\n  passportDateEnd,\n  doc_type,\n  passportNum2,\n  passportGive2,\n  passportDate2,\n  passportDateEnd2,\n  mobilePhone,\n  phone,\n  mobilePhone2,\n  phone2,\n  email2,\n  name,\n  surname\n}) {\n  const wsBody = '<ws:registrationFreedomTravelRequest>' + '<ws:sessionId>' + sessionId + '</ws:sessionId>' + '<ws:country1>' + country1 + '</ws:country1>' + '<ws:country2>' + country2 + '</ws:country2>' + '<ws:country3>' + country3 + '</ws:country3>' + '<ws:rprogramm>' + rprogramm + '</ws:rprogramm>' + '<ws:rprogSrok>' + rprogSrok + '</ws:rprogSrok>' + '<ws:progMaxDays>' + progMaxDays + '</ws:progMaxDays>' + '<ws:dateStart>' + dateStart + '</ws:dateStart>' + '<ws:dateEnd>' + dateEnd + '</ws:dateEnd>' + '<ws:curRate>' + curRate + '</ws:curRate>' + '<ws:fioKir>' + surname + \" \" + name + '</ws:fioKir>' + '<ws:fioLat>' + surname + \" \" + name + '</ws:fioLat>' + '<ws:inn>' + iin + '</ws:inn>' + '<ws:resId>' + resId + '</ws:resId>' + '<ws:address>' + address + '</ws:address>' + '<ws:sex>' + sex + '</ws:sex>' + '<ws:dateBirth>' + dateBirth + '</ws:dateBirth>' + '<ws:region>' + region + '</ws:region>' + '<ws:fioKir2>' + surname + \" \" + name + '</ws:fioKir2>' + '<ws:fioLat2>' + surname + \" \" + name + '</ws:fioLat2>' + '<ws:iin2>' + iin + '</ws:iin2>' + '<ws:resId2>' + resId + '</ws:resId2>' + '<ws:address2>' + address + '</ws:address2>' + '<ws:sex2>' + sex + '</ws:sex2>' + '<ws:dateBirth2>' + dateBirth + '</ws:dateBirth2>' + '<ws:region2>' + region + '</ws:region2>' + '<ws:passportNum>' + passportNum + '</ws:passportNum>' + '<ws:passportGive>' + passportGive + '</ws:passportGive>' + '<ws:passportDate>' + passportDate + '</ws:passportDate>' + '<ws:passportDateEnd>' + passportDateEnd + '</ws:passportDateEnd>' + '<ws:doc_type>' + doc_type + '</ws:doc_type>' + '<ws:passportNum2>' + passportNum + '</ws:passportNum2>' + '<ws:passportGive2>' + passportGive + '</ws:passportGive2>' + '<ws:passportDate2>' + passportDate + '</ws:passportDate2>' + '<ws:passportDateEnd2>' + passportDateEnd + '</ws:passportDateEnd2>' + '<ws:mobilePhone>' + mobilePhone + '</ws:mobilePhone>' + '<ws:phone>' + phone + '</ws:phone>' + '<ws:email>' + email + '</ws:email>' + '<ws:mobilePhone2>' + mobilePhone + '</ws:mobilePhone2>' + '<ws:phone2>' + phone + '</ws:phone2>' + '<ws:email2>' + email + '</ws:email2>' + '</ws:registrationFreedomTravelRequest>';\n  const xml = await callWebService(wsBody);\n  console.log(\"regbody : \" + wsBody);\n  console.log(\"surname: \" + surname + \" \" + name);\n  console.log(\"xml :\", xml);\n  const messageXml = xml.getElementsByTagName('ns2:message');\n  return messageXml[0] && messageXml[0].value;\n}\nexport async function getCalculatedTravelInsurancePremium(sessionId, {\n  country1,\n  country2,\n  country3,\n  sumStrah,\n  insuranceProgramm,\n  beginDate,\n  endDate,\n  birthDate,\n  rprogSrok,\n  rprogMaxDays,\n  email\n}) {\n  const wsBody = '<ws:calculatorFreedomTravelRequest>' + '<ws:sessionId>' + sessionId + '</ws:sessionId>' + '<ws:country1>' + country1 + '</ws:country1>' + '<ws:country2>' + country2 + '</ws:country2>' + '<ws:country3>' + country3 + '</ws:country3>' + '<ws:sumStrah>' + sumStrah + '</ws:sumStrah>' + '<ws:insuranceProgramm>' + insuranceProgramm + '</ws:insuranceProgramm>' + '<ws:beginDate>' + beginDate + '</ws:beginDate>' + '<ws:endDate>' + endDate + '</ws:endDate>' + '<ws:birthDate>' + birthDate + '</ws:birthDate>' + '<ws:rprogSrok>' + rprogSrok + '</ws:rprogSrok>' + '<ws:rprogMaxDays>' + rprogMaxDays + '</ws:rprogMaxDays>' + '<ws:email>' + email + '</ws:email>' + '</ws:calculatorFreedomTravelRequest>';\n  const xml = await callWebService(wsBody);\n  const premiumXml = xml.getElementsByTagName('ns2:premKz');\n  console.log(\"body : \" + wsBody);\n  console.log(\"xml :\", xml);\n  return premiumXml[0] && premiumXml[0].value;\n}\nexport async function getTravelDurationList() {\n  return [{\n    value: '1',\n    label: 'до 6 месяцев'\n  }, {\n    value: '2',\n    label: 'от 6 до 9 месяцев'\n  }, {\n    value: '3',\n    label: 'от 9 до 12 месяцев'\n  }];\n}\n;\nexport async function getMaxNumberOfDaysAbroadList() {\n  return [{\n    value: '1',\n    label: 'до 30 дней'\n  }, {\n    value: '2',\n    label: 'до 60 дней'\n  }, {\n    value: '3',\n    label: 'до 90 дней'\n  }, {\n    value: '4',\n    label: 'до 180 дней'\n  }];\n}\n;\nexport async function getInsuredSumList() {\n  return [{\n    value: '10000',\n    label: '10 000 Евро'\n  }, {\n    value: '20000',\n    label: '20 000 Евро'\n  }, {\n    value: '30000',\n    label: '30 000 Евро'\n  }, {\n    value: '50000',\n    label: '50 000 Евро'\n  }, {\n    value: '70000',\n    label: '70 000 Евро'\n  }, {\n    value: '100000',\n    label: '100 000 Евро'\n  }];\n}\n;","map":{"version":3,"sources":["C:\\Users\\eshpan\\Documents\\Projects\\Ffin-project\\src\\services\\fetcher.js"],"names":["callWebService","getCountries","sessionId","wsBody","xml","countriesXml","getElementsByTagName","countries","map","countryXml","codeXml","nameXml","territoryXml","code","value","name","territory","registrateTravelInsurance","country1","country2","country3","rprogSrok","email","rprogramm","progMaxDays","dateStart","dateEnd","curRate","fioKir","fioLat","iin","resId","address","sex","dateBirth","region","fioKir2","fioLat2","iin2","resId2","address2","sex2","dateBirth2","region2","passportNum","passportGive","passportDate","passportDateEnd","doc_type","passportNum2","passportGive2","passportDate2","passportDateEnd2","mobilePhone","phone","mobilePhone2","phone2","email2","surname","console","log","messageXml","getCalculatedTravelInsurancePremium","sumStrah","insuranceProgramm","beginDate","endDate","birthDate","rprogMaxDays","premiumXml","getTravelDurationList","label","getMaxNumberOfDaysAbroadList","getInsuredSumList"],"mappings":"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","sourcesContent":["import { callWebService } from './ws-services';\n\nexport async function getCountries(sessionId) {\n    const wsBody = '<ws:cabCountryRequest>' +\n            '<ws:sessionId>' + sessionId + '</ws:sessionId>' +\n        '</ws:cabCountryRequest>';\n    const xml = callWebService(wsBody, sessionId);\n    const countriesXml = xml.getElementsByTagName('ns2:countries');\n\n    const countries = countriesXml.map((countryXml) => {\n        const codeXml = countryXml.getElementsByTagName('ns2:codeOfCountry');\n        const nameXml = countryXml.getElementsByTagName('ns2:nameOfCountry');\n        const territoryXml = countryXml.getElementsByTagName('ns2:territoryCountry');\n\n        return {\n            code: codeXml[0] && codeXml[0].value,\n            name: nameXml[0] && nameXml[0].value,\n            territory: territoryXml[0] && territoryXml[0].value\n        };\n    });\n    return countries;\n}\n\nexport async function registrateTravelInsurance(sessionId, {country1, country2, country3, rprogSrok, email, rprogramm, progMaxDays, \n    dateStart, dateEnd, curRate, fioKir, fioLat, iin, resId, address, sex, dateBirth, region, fioKir2, fioLat2, iin2, resId2, address2, \n    sex2, dateBirth2, region2, passportNum, passportGive, passportDate, passportDateEnd, doc_type, passportNum2, passportGive2, \n    passportDate2, passportDateEnd2, mobilePhone, phone, mobilePhone2, phone2, email2, name, surname\n}) {\n    const wsBody = '<ws:registrationFreedomTravelRequest>' +\n            '<ws:sessionId>'+ sessionId +'</ws:sessionId>' +\n            '<ws:country1>'+ country1 +'</ws:country1>' +\n            '<ws:country2>'+ country2 +'</ws:country2>' +\n            '<ws:country3>'+ country3 +'</ws:country3>' +\n            '<ws:rprogramm>'+ rprogramm +'</ws:rprogramm>' +\n            '<ws:rprogSrok>'+ rprogSrok +'</ws:rprogSrok>' +\n            '<ws:progMaxDays>'+ progMaxDays +'</ws:progMaxDays>' +\n            '<ws:dateStart>'+ dateStart +'</ws:dateStart>' +\n            '<ws:dateEnd>'+ dateEnd +'</ws:dateEnd>' +\n            '<ws:curRate>'+ curRate +'</ws:curRate>' +\n            '<ws:fioKir>'+ surname + \" \"+ name +'</ws:fioKir>' +\n            '<ws:fioLat>'+ surname + \" \"+ name +'</ws:fioLat>' +\n            '<ws:inn>'+ iin +'</ws:inn>' +\n            '<ws:resId>'+ resId +'</ws:resId>' +\n            '<ws:address>'+ address +'</ws:address>' +\n            '<ws:sex>'+ sex + '</ws:sex>' +\n            '<ws:dateBirth>'+ dateBirth +'</ws:dateBirth>' +\n            '<ws:region>'+ region +'</ws:region>' +\n            '<ws:fioKir2>'+ surname + \" \"+ name +'</ws:fioKir2>' +\n            '<ws:fioLat2>'+ surname + \" \"+ name +'</ws:fioLat2>' +\n            '<ws:iin2>'+ iin +'</ws:iin2>' +\n            '<ws:resId2>'+ resId +'</ws:resId2>' +\n            '<ws:address2>'+ address +'</ws:address2>' +\n            '<ws:sex2>'+ sex +'</ws:sex2>' +\n            '<ws:dateBirth2>'+ dateBirth +'</ws:dateBirth2>' +\n            '<ws:region2>'+ region +'</ws:region2>' +\n            '<ws:passportNum>'+ passportNum +'</ws:passportNum>' +\n            '<ws:passportGive>'+ passportGive +'</ws:passportGive>' +\n            '<ws:passportDate>'+ passportDate +'</ws:passportDate>' +\n            '<ws:passportDateEnd>'+ passportDateEnd +'</ws:passportDateEnd>' +\n            '<ws:doc_type>'+ doc_type +'</ws:doc_type>' +\n            '<ws:passportNum2>'+ passportNum +'</ws:passportNum2>' +\n            '<ws:passportGive2>'+ passportGive +'</ws:passportGive2>' +\n            '<ws:passportDate2>'+ passportDate +'</ws:passportDate2>' +\n            '<ws:passportDateEnd2>'+ passportDateEnd +'</ws:passportDateEnd2>' +\n            '<ws:mobilePhone>'+ mobilePhone +'</ws:mobilePhone>' +\n            '<ws:phone>'+ phone +'</ws:phone>' +\n            '<ws:email>'+ email +'</ws:email>' +\n            '<ws:mobilePhone2>'+ mobilePhone +'</ws:mobilePhone2>' +\n            '<ws:phone2>'+ phone +'</ws:phone2>' +\n            '<ws:email2>'+ email +'</ws:email2>' +\n        '</ws:registrationFreedomTravelRequest>';\n    const xml = await callWebService(wsBody);\n    console.log(\"regbody : \" + wsBody);\n    console.log(\"surname: \"+ surname + \" \"+ name)\n    console.log(\"xml :\" , xml);\n    const messageXml = xml.getElementsByTagName('ns2:message');\n    return messageXml[0] && messageXml[0].value;\n}\n\nexport async function getCalculatedTravelInsurancePremium(sessionId, {\n    country1, country2, country3, sumStrah, insuranceProgramm, beginDate, endDate, birthDate, rprogSrok, rprogMaxDays, email\n}) {\n    const wsBody = '<ws:calculatorFreedomTravelRequest>' +\n            '<ws:sessionId>' + sessionId + '</ws:sessionId>' +\n            '<ws:country1>' + country1 + '</ws:country1>'+\n            '<ws:country2>' + country2 + '</ws:country2>'+\n            '<ws:country3>' + country3 + '</ws:country3>'+\n            '<ws:sumStrah>' + sumStrah + '</ws:sumStrah>'+\n            '<ws:insuranceProgramm>' + insuranceProgramm + '</ws:insuranceProgramm>'+\n            '<ws:beginDate>' + beginDate + '</ws:beginDate>'+\n            '<ws:endDate>' + endDate + '</ws:endDate>'+\n            '<ws:birthDate>' + birthDate + '</ws:birthDate>'+\n            '<ws:rprogSrok>' + rprogSrok + '</ws:rprogSrok>'+\n            '<ws:rprogMaxDays>' + rprogMaxDays + '</ws:rprogMaxDays>'+\n            '<ws:email>' + email + '</ws:email>'+\n        '</ws:calculatorFreedomTravelRequest>';\n    const xml = await callWebService(wsBody);\n    const premiumXml = xml.getElementsByTagName('ns2:premKz');\n\n    console.log(\"body : \" + wsBody);\n    console.log(\"xml :\" , xml);\n\n    return premiumXml[0] && premiumXml[0].value;\n}\n\nexport async function getTravelDurationList() {\n    return [\n        { value: '1', label: 'до 6 месяцев' },\n        { value: '2', label: 'от 6 до 9 месяцев' },\n        { value: '3', label: 'от 9 до 12 месяцев' }\n    ];\n};\n\nexport async function getMaxNumberOfDaysAbroadList() {\n    return [\n        { value: '1', label: 'до 30 дней' },\n        { value: '2', label: 'до 60 дней' },\n        { value: '3', label: 'до 90 дней' },\n        { value: '4', label: 'до 180 дней' },\n    ];\n};\n\nexport async function getInsuredSumList() {\n    return [\n        { value: '10000', label: '10 000 Евро' },\n        { value: '20000', label: '20 000 Евро' },\n        { value: '30000', label: '30 000 Евро' },\n        { value: '50000', label: '50 000 Евро' },\n        { value: '70000', label: '70 000 Евро' },\n        { value: '100000', label: '100 000 Евро' }\n    ];\n};"]},"metadata":{},"sourceType":"module"}