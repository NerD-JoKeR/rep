{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\eshpan\\\\Documents\\\\Projects\\\\Ffin-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"C:\\\\Users\\\\eshpan\\\\Documents\\\\Projects\\\\Ffin-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\eshpan\\\\Documents\\\\Projects\\\\Ffin-project\\\\src\\\\components\\\\Calculator\\\\Calculator.jsx\";\nimport React, { Fragment } from 'react';\nimport { Grid, IconButton, TextField, Button, Select, MenuItem, FormControl, FormControlLabel, InputLabel, Switch, Paper } from '@material-ui/core';\nimport { KeyboardDatePicker } from '@material-ui/pickers';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddIcon from '@material-ui/icons/Add';\nimport ReactSelect from 'react-select';\nimport { getCountries, getCalculatedTravelInsurancePremium, getInsuredSumList, getMaxNumberOfDaysAbroadList, getTravelDurationList } from '../../services';\nimport { thisTypeAnnotation } from '@babel/types';\nexport class Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.maxSelectCountry = 3;\n\n    this.onDataChange = event => {\n      const name = event.target.name;\n      const value = event.target.value;\n      this.setState({\n        data: _objectSpread({}, this.state.data, {\n          [name]: value\n        })\n      });\n    };\n\n    this.onFieldChange = event => {\n      const name = event.target.name;\n      const value = event.target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.onDataChangeByName = name => value => {\n      this.onDataChange({\n        target: {\n          name,\n          value\n        }\n      });\n    };\n\n    this.onBirthDateChange = this.onDataChangeByName('birthDate');\n    this.onBeginDateChange = this.onDataChangeByName('beginDate');\n    this.onEndDateChange = this.onDataChangeByName('endDate');\n\n    this.getParsedDataToBackend = data => {\n      const selectedCountries = this.state.selectedCountries;\n\n      let beginDate = data.beginDate,\n          endDate = data.endDate,\n          birthDate = data.birthDate,\n          country1 = data.country1,\n          country2 = data.country2,\n          country3 = data.country3,\n          rest = _objectWithoutProperties(data, [\"beginDate\", \"endDate\", \"birthDate\", \"country1\", \"country2\", \"country3\"]);\n\n      beginDate = beginDate.format('DD.MM.YYYY');\n      endDate = endDate.format('DD.MM.YYYY');\n      birthDate = birthDate.format('DD.MM.YYYY');\n      country1 = selectedCountries.length >= 1 && selectedCountries[0].value || '';\n      country2 = selectedCountries.length >= 2 && selectedCountries[1].value || '';\n      country3 = selectedCountries.length >= 3 && selectedCountries[2].value || '';\n      return _objectSpread({}, rest, {\n        beginDate,\n        endDate,\n        birthDate,\n        country1,\n        country2,\n        country3\n      });\n    };\n\n    this.calculate = async () => {\n      const sessionId = sessionStorage.getItem('sessionId');\n      const data = this.getParsedDataToBackend(this.state.data);\n      const insurancePremium = await getCalculatedTravelInsurancePremium(sessionId, data);\n      this.setState({\n        insurancePremium\n      });\n    };\n\n    this.onAddCountry = () => {\n      const selectedCountries = this.state.selectedCountries;\n\n      if (selectedCountries.length < this.maxSelectCountry) {\n        this.setState({\n          selectedCountries: [...selectedCountries, '']\n        });\n      }\n    };\n\n    this.onDeleteCountry = index => {\n      const selectedCountries = [...this.state.selectedCountries];\n\n      if (selectedCountries.length > 1) {\n        selectedCountries.splice(index, 1);\n        this.setState({\n          selectedCountries\n        });\n      }\n    };\n\n    this.onSelectCountry = (index, country) => {\n      const selectedCountries = [...this.state.selectedCountries];\n      selectedCountries[index] = _objectSpread({}, country);\n      this.setState({\n        selectedCountries\n      });\n    };\n\n    this.onMultiVisitChange = event => {\n      this.setState({\n        isMultiVisit: !this.state.isMultiVisit\n      });\n    };\n\n    this.onFinish = async () => {\n      this.props.onFinish(this.state);\n    };\n\n    this.state = {\n      data: {\n        country1: '',\n        country2: '',\n        country3: '',\n        sumStrah: '',\n        insuranceProgramm: 1,\n        beginDate: null,\n        endDate: null,\n        birthDate: null,\n        rprogSrok: '',\n        rprogMaxDays: '',\n        email: ''\n      },\n      insurancePremium: '',\n      selectedCountries: [''],\n      showCountrySelectCount: 1,\n      isMultiVisit: false,\n      insuredSumList: [],\n      travelDurationList: [],\n      abroadDaysList: [],\n      countries: []\n    };\n  }\n\n  componentWillMount() {\n    this.getFilters();\n  }\n\n  getFilters() {\n    const insuredSumList = getInsuredSumList();\n    const travelDurationList = getTravelDurationList();\n    const abroadDaysList = getMaxNumberOfDaysAbroadList();\n    const sessionId = sessionStorage.getItem('sessionId');\n    const rawCountries = getCountries(sessionId);\n    const countries = rawCountries ? rawCountries.map(c => ({\n      value: c.code,\n      label: c.name\n    })) : [];\n    this.setState({\n      countries,\n      insuredSumList,\n      travelDurationList,\n      abroadDaysList\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          _this$state$data = _this$state.data,\n          sumStrah = _this$state$data.sumStrah,\n          insuranceProgramm = _this$state$data.insuranceProgramm,\n          beginDate = _this$state$data.beginDate,\n          endDate = _this$state$data.endDate,\n          birthDate = _this$state$data.birthDate,\n          rprogSrok = _this$state$data.rprogSrok,\n          rprogMaxDays = _this$state$data.rprogMaxDays,\n          email = _this$state$data.email,\n          selectedCountries = _this$state.selectedCountries,\n          abroadDaysList = _this$state.abroadDaysList,\n          insuredSumList = _this$state.insuredSumList,\n          travelDurationList = _this$state.travelDurationList,\n          insurancePremium = _this$state.insurancePremium,\n          isMultiVisit = _this$state.isMultiVisit,\n          countries = _this$state.countries;\n    return React.createElement(Paper, {\n      className: \"calculator-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"page-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"\\u0420\\u0430\\u0441\\u0441\\u0447\\u0438\\u0442\\u0430\\u0442\\u044C \\u0441\\u0442\\u0440\\u0430\\u0445\\u043E\\u0432\\u0443\\u044E \\u043F\\u0440\\u0435\\u043C\\u0438\\u044E\"), React.createElement(Grid, {\n      container: true,\n      justify: \"space-around\",\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      sm: 7,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, selectedCountries && selectedCountries.map((c, index) => React.createElement(Grid, {\n      item: true,\n      key: index,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(ReactSelect, {\n      className: \"react-select\",\n      value: c,\n      options: countries,\n      placeholder: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0441\\u0442\\u0440\\u0430\\u043D\\u0443\",\n      onChange: v => this.onSelectCountry(index, v),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), selectedCountries.length > 1 && React.createElement(IconButton, {\n      onMouseDown: () => this.onDeleteCountry(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(DeleteIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    })))))), React.createElement(Grid, {\n      item: true,\n      sm: 5,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      onMouseDown: this.onAddCountry,\n      disabled: selectedCountries.length === this.maxSelectCountry,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(AddIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }), \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0441\\u0442\\u0440\\u0430\\u043D\\u0443\")))), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      control: React.createElement(Switch, {\n        value: isMultiVisit,\n        onChange: this.onMultiVisitChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }),\n      label: \"\\u041C\\u043D\\u043E\\u0433\\u043E\\u043A\\u0440\\u0430\\u0442\\u043D\\u0430\\u044F \\u0441\\u0442\\u0440\\u0430\\u0445\\u043E\\u0432\\u043A\\u0430\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    })), isMultiVisit && React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"travel-duration\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, \"\\u041F\\u0440\\u043E\\u0434\\u043E\\u043B\\u0436\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u044C \\u043F\\u0443\\u0442\\u0435\\u0448\\u0435\\u0441\\u0442\\u0432\\u0438\\u044F\"), React.createElement(Select, {\n      onChange: this.onDataChange,\n      value: rprogSrok,\n      inputProps: {\n        name: 'rprogSrok',\n        id: 'travel-duration'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, travelDurationList && travelDurationList.map(item => React.createElement(MenuItem, {\n      key: item.value,\n      value: item.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, item.label))))), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"abroad-days\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, \"\\u041C\\u0430\\u043A\\u0441\\u0438\\u043C\\u0430\\u043B\\u044C\\u043D\\u043E \\u043A\\u043E\\u043B-\\u0432\\u043E \\u0434\\u043D\\u0435\\u0439 \\u0437\\u0430 \\u0433\\u0440\\u0430\\u043D\\u0438\\u0446\\u0435\\u0439\"), React.createElement(Select, {\n      onChange: this.onDataChange,\n      value: rprogMaxDays,\n      inputProps: {\n        name: 'rprogMaxDays',\n        id: 'abroad-days'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, abroadDaysList && abroadDaysList.map(item => React.createElement(MenuItem, {\n      key: item.value,\n      value: item.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, item.label)))))), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(KeyboardDatePicker, {\n      disablePast: true,\n      format: \"DD.MM.YYYY\",\n      label: \"\\u041A\\u043E\\u0433\\u0434\\u0430 \\u0443\\u0435\\u0437\\u0436\\u0430\\u0435\\u0442\\u0435?\",\n      value: beginDate,\n      onChange: this.onBeginDateChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, React.createElement(KeyboardDatePicker, {\n      disablePast: true,\n      minDate: beginDate,\n      format: \"DD.MM.YYYY\",\n      label: \"\\u041A\\u043E\\u0433\\u0434\\u0430 \\u0432\\u043E\\u0437\\u0432\\u0440\\u0430\\u0449\\u0430\\u0435\\u0442\\u0435\\u0441\\u044C?\",\n      value: endDate,\n      onChange: this.onEndDateChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"insured-sum\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, \"\\u0421\\u0442\\u0440\\u0430\\u0445\\u043E\\u0432\\u0430\\u044F \\u0441\\u0443\\u043C\\u043C\\u0430\"), React.createElement(Select, {\n      onChange: this.onDataChange,\n      value: sumStrah,\n      inputProps: {\n        name: 'sumStrah',\n        id: 'insured-sum'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, insuredSumList && insuredSumList.map(item => React.createElement(MenuItem, {\n      key: item.value,\n      value: item.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, item.label))))), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, React.createElement(KeyboardDatePicker, {\n      disableFuture: true,\n      openTo: \"year\",\n      format: \"DD.MM.YYYY\",\n      views: [\"year\", \"month\", \"date\"],\n      label: \"\\u0414\\u0430\\u0442\\u0430 \\u0440\\u043E\\u0436\\u0434\\u0435\\u043D\\u0438\\u044F\",\n      value: birthDate,\n      onChange: this.onBirthDateChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: this.calculate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, \"\\u0420\\u0430\\u0441\\u0441\\u0447\\u0438\\u0442\\u0430\\u0442\\u044C\")), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      InputLabelProps: {\n        shrink: true\n      },\n      label: \"\\u0421\\u0442\\u0440\\u0430\\u0445\\u043E\\u0432\\u0430\\u044F \\u043F\\u0440\\u0435\\u043C\\u0438\\u044F\",\n      value: insurancePremium,\n      InputProps: {\n        readOnly: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.onFinish,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, \"\\u041E\\u0444\\u043E\\u0440\\u043C\\u0438\\u0442\\u044C \\u0441\\u0435\\u0439\\u0447\\u0430\\u0441\"))));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\eshpan\\Documents\\Projects\\Ffin-project\\src\\components\\Calculator\\Calculator.jsx"],"names":["React","Fragment","Grid","IconButton","TextField","Button","Select","MenuItem","FormControl","FormControlLabel","InputLabel","Switch","Paper","KeyboardDatePicker","DeleteIcon","AddIcon","ReactSelect","getCountries","getCalculatedTravelInsurancePremium","getInsuredSumList","getMaxNumberOfDaysAbroadList","getTravelDurationList","thisTypeAnnotation","Calculator","Component","constructor","props","maxSelectCountry","onDataChange","event","name","target","value","setState","data","state","onFieldChange","onDataChangeByName","onBirthDateChange","onBeginDateChange","onEndDateChange","getParsedDataToBackend","selectedCountries","beginDate","endDate","birthDate","country1","country2","country3","rest","format","length","calculate","sessionId","sessionStorage","getItem","insurancePremium","onAddCountry","onDeleteCountry","index","splice","onSelectCountry","country","onMultiVisitChange","isMultiVisit","onFinish","sumStrah","insuranceProgramm","rprogSrok","rprogMaxDays","email","showCountrySelectCount","insuredSumList","travelDurationList","abroadDaysList","countries","componentWillMount","getFilters","rawCountries","map","c","code","label","render","v","id","item","shrink","readOnly"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport { Grid, IconButton, TextField, Button, Select, MenuItem, FormControl, FormControlLabel, InputLabel, Switch, Paper } from '@material-ui/core';\nimport { KeyboardDatePicker } from '@material-ui/pickers';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddIcon from '@material-ui/icons/Add';\nimport ReactSelect from 'react-select';\nimport {\n    getCountries,\n    getCalculatedTravelInsurancePremium,\n    getInsuredSumList,\n    getMaxNumberOfDaysAbroadList,\n    getTravelDurationList\n} from '../../services';\nimport { thisTypeAnnotation } from '@babel/types';\n\nexport class Calculator extends React.Component {\n\n    maxSelectCountry = 3;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data: {\n                country1: '',\n                country2: '',\n                country3: '',\n                sumStrah: '',\n                insuranceProgramm: 1,\n                beginDate: null,\n                endDate: null,\n                birthDate: null,\n                rprogSrok: '',\n                rprogMaxDays: '',\n                email: ''\n            },\n            insurancePremium: '',\n            selectedCountries: [''],\n            showCountrySelectCount: 1,\n            isMultiVisit: false,\n            insuredSumList: [],\n            travelDurationList: [],\n            abroadDaysList: [],\n            countries: []\n        }\n    }\n\n    componentWillMount() {\n        this.getFilters();\n    }\n\n     getFilters() {\n        const insuredSumList =  getInsuredSumList();\n        const travelDurationList =   getTravelDurationList();\n        const abroadDaysList =  getMaxNumberOfDaysAbroadList();\n        const sessionId = sessionStorage.getItem('sessionId');\n        const rawCountries =  getCountries(sessionId);\n        const countries = rawCountries ? rawCountries.map((c) => ({ value: c.code, label: c.name})) : [];\n        this.setState({\n            countries,          \n            insuredSumList,\n            travelDurationList,\n            abroadDaysList\n        })\n    }\n\n    onDataChange = (event) => {\n        const name = event.target.name;\n        const value = event.target.value;\n        this.setState({\n            data: {\n                ...this.state.data,\n                [name]: value\n            }\n        });\n    }\n\n    onFieldChange = (event) => {\n        const name = event.target.name;\n        const value = event.target.value;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    onDataChangeByName = (name) => (value) => {\n        this.onDataChange({ target: { name, value } });\n    }\n\n    onBirthDateChange = this.onDataChangeByName('birthDate');\n    onBeginDateChange = this.onDataChangeByName('beginDate');\n    onEndDateChange = this.onDataChangeByName('endDate');\n\n    getParsedDataToBackend = (data) => {\n        const { selectedCountries } = this.state;\n        let { beginDate, endDate, birthDate, country1, country2, country3, ...rest } = data;\n        beginDate = beginDate.format('DD.MM.YYYY');\n        endDate = endDate.format('DD.MM.YYYY');\n        birthDate = birthDate.format('DD.MM.YYYY');\n        country1 = (selectedCountries.length >= 1 && selectedCountries[0].value) || '';\n        country2 = (selectedCountries.length >= 2 && selectedCountries[1].value) || '';\n        country3 = (selectedCountries.length >= 3 && selectedCountries[2].value) || '';\n        return { ...rest, beginDate, endDate, birthDate, country1, country2, country3 };\n    }\n\n    calculate = async () => {\n        const sessionId = sessionStorage.getItem('sessionId');\n        const data = this.getParsedDataToBackend(this.state.data);\n        const insurancePremium = await getCalculatedTravelInsurancePremium(sessionId, data);\n        this.setState({ insurancePremium });\n    }\n\n    onAddCountry = () => {\n        const { selectedCountries } = this.state;\n        if (selectedCountries.length < this.maxSelectCountry) {\n            this.setState({\n                selectedCountries: [ ...selectedCountries, '']\n            })\n        }\n    }\n\n    onDeleteCountry = (index) => {\n        const selectedCountries = [ ...this.state.selectedCountries ];\n        if (selectedCountries.length > 1) {\n            selectedCountries.splice(index, 1);\n            this.setState({ selectedCountries });\n        }\n    }\n\n    onSelectCountry = (index, country) => {\n        const selectedCountries = [ ...this.state.selectedCountries ];\n        selectedCountries[index] = { ...country };\n        this.setState({ selectedCountries });\n    }\n\n    onMultiVisitChange = (event) => {\n        this.setState({ isMultiVisit: !this.state.isMultiVisit })\n    }\n\n    onFinish = async () => {\n        this.props.onFinish(this.state);\n    }\n\n    render(){\n        const { \n            data: {\n                sumStrah, \n                insuranceProgramm, \n                beginDate, \n                endDate, \n                birthDate, \n                rprogSrok, \n                rprogMaxDays, \n                email\n            },\n            selectedCountries,\n            abroadDaysList,\n            insuredSumList,\n            travelDurationList,\n            insurancePremium,\n            isMultiVisit,\n            countries\n        } = this.state;\n\n        return (\n            <Paper className=\"calculator-page\">\n                <h2 className=\"page-title\">Рассчитать страховую премию</h2>\n\n                <Grid container justify=\"space-around\" spacing={ 2 }>\n                    \n                    <Grid item xs={ 12 }>\n                        <Grid container spacing={ 2 }>\n                            <Grid item sm={ 7 } xs={ 12 }>\n                                <Grid container spacing={ 2 }>\n                                    { selectedCountries && selectedCountries.map((c, index) => (\n                                        <Grid item key={ index } xs={ 12 }>\n                                            <ReactSelect\n                                                className=\"react-select\"\n                                                value={ c }\n                                                options={ countries }\n                                                placeholder=\"Выберите страну\"\n                                                onChange={ (v) => this.onSelectCountry(index, v) }\n                                            />\n                                            { selectedCountries.length > 1 && (\n                                                <IconButton\n                                                    onMouseDown={ () => this.onDeleteCountry(index) }\n                                                >\n                                                    <DeleteIcon />\n                                                </IconButton>\n                                            ) }\n                                        </Grid>                                            \n                                    )) }\n                                </Grid>\n                            </Grid>\n                            <Grid item sm={ 5 } xs={ 12 }>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                    onMouseDown={ this.onAddCountry }\n                                    disabled={ selectedCountries.length === this.maxSelectCountry }\n                                >\n                                    <AddIcon />\n                                    Добавить страну\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n\n                    <Grid item xs={ 12 }>\n                        <FormControlLabel\n                            control={\n                                <Switch\n                                    value={ isMultiVisit }\n                                    onChange={ this.onMultiVisitChange }\n                                />\n                            }\n                            label=\"Многократная страховка\"\n                        />\n                    </Grid>\n\n                    { isMultiVisit && <Fragment>   \n                        <Grid item xs={ 12 } md={ 6 }>\n                            <FormControl className=\"form-control\">\n                                <label htmlFor=\"travel-duration\" className=\"form-label\">Продолжительность путешествия</label>\n                                <Select\n                                    onChange={ this.onDataChange }\n                                    value={ rprogSrok }\n                                    inputProps={{\n                                        name: 'rprogSrok',\n                                        id: 'travel-duration'\n                                    }}\n                                >\n                                    { travelDurationList && travelDurationList.map((item) => \n                                        <MenuItem key={item.value} value={item.value}>{item.label}</MenuItem>) }\n                                </Select>\n                            </FormControl>\n                        </Grid>\n\n                        <Grid item xs={ 12 } md={ 6 }>\n                            <FormControl className=\"form-control\">\n                                <label htmlFor=\"abroad-days\" className=\"form-label\">Максимально кол-во дней за границей</label>\n                                <Select\n                                    onChange={ this.onDataChange }\n                                    value={ rprogMaxDays }\n                                    inputProps={{\n                                        name: 'rprogMaxDays',\n                                        id: 'abroad-days'\n                                    }}\n                                >\n                                    { abroadDaysList && abroadDaysList.map((item) => \n                                        <MenuItem key={item.value} value={item.value}>{item.label}</MenuItem>) }\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                    </Fragment> }                    \n\n                    <Grid item xs={ 12 } md={ 6 }>\n                        <KeyboardDatePicker\n                            disablePast\n                            format=\"DD.MM.YYYY\"\n                            label=\"Когда уезжаете?\"\n                            value={ beginDate }\n                            onChange={ this.onBeginDateChange }\n                        />\n                    </Grid>\n\n                    <Grid item xs={ 12 } md={ 6 }>\n                        <KeyboardDatePicker\n                            disablePast\n                            minDate={ beginDate }\n                            format=\"DD.MM.YYYY\"\n                            label=\"Когда возвращаетесь?\"\n                            value={ endDate }\n                            onChange={ this.onEndDateChange }\n                        />\n                    </Grid>\n\n                    <Grid item xs={ 12 } md={ 6 }>\n                        <FormControl className=\"form-control\">\n                            <InputLabel htmlFor=\"insured-sum\">Страховая сумма</InputLabel>\n                            <Select\n                                onChange={ this.onDataChange }\n                                value={ sumStrah }\n                                inputProps={{\n                                    name: 'sumStrah',\n                                    id: 'insured-sum'\n                                }}\n                            >\n                                { insuredSumList && insuredSumList.map((item) => \n                                    <MenuItem key={item.value} value={item.value}>{item.label}</MenuItem>) }\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={ 12 } md={ 6 }>\n                        <KeyboardDatePicker\n                            disableFuture\n                            openTo=\"year\"\n                            format=\"DD.MM.YYYY\"\n                            views={[\"year\", \"month\", \"date\"]}\n                            label=\"Дата рождения\"\n                            value={ birthDate }\n                            onChange={ this.onBirthDateChange }\n                        />\n                    </Grid>\n\n                    <Grid item xs={ 12 }>\n                        <Grid container spacing={ 2 } alignItems=\"center\">\n                            <Grid item>\n                                <Button variant=\"contained\" color=\"secondary\" onClick={ this.calculate }>Рассчитать</Button>\n                            </Grid>\n                            <Grid item>\n                                <TextField\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                    label=\"Страховая премия\"\n                                    value={ insurancePremium }\n                                    InputProps={ { readOnly: true } }\n                                />\n                            </Grid>\n                        </Grid>                \n                    </Grid>\n\n                    <Grid item xs={ 12 }>\n                        <Button variant=\"contained\" color=\"primary\" onClick={ this.onFinish }>Оформить сейчас</Button>\n                    </Grid>            \n                    \n                </Grid>\n                \n            </Paper>\n        );\n    }\n\n}\n\n"]},"metadata":{},"sourceType":"module"}