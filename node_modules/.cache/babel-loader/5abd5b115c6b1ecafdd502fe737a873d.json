{"ast":null,"code":"const XMLParser = require('react-xml-parser');\n\nconst login = 'ffinlife_site';\nconst password = '1q3wr2';\nconst basicAuthorizationToken = 'Basic a2FzcGk6a2FzcGk=';\nexport function authenticate() {\n  fetch('/ws', {\n    method: 'post',\n    headers: {\n      'Content-Type': 'text/xml',\n      'Authorization': basicAuthorizationToken\n    },\n    body: '<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ws=\"http://ffinlife/ws\">' + '<soapenv:Header/>' + '<soapenv:Body>' + '<ws:authorizationWSRequest>' + '<ws:login>' + login + '</ws:login>' + '<ws:password>' + password + '</ws:password>' + '</ws:authorizationWSRequest>' + '</soapenv:Body>' + '</soapenv:Envelope>'\n  }).then(async response => {\n    const xml = await parseResponseToJson(response);\n    const sessionId = xml.getElementsByTagName('ns2:sessionId')[0].value;\n    sessionStorage.setItem('sessionId', sessionId);\n  });\n}\nexport function callWebService(wsBody) {\n  const body = '<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ws=\"http://ffinlife/ws\">' + '<soapenv:Header/>' + '<soapenv:Body>' + wsBody + '</soapenv:Body>' + '</soapenv:Envelope>';\n  return fetch('/ws', {\n    method: 'post',\n    headers: {\n      'Content-Type': 'text/xml',\n      'Authorization': basicAuthorizationToken\n    },\n    body\n  }).then(response => {\n    const xml = parseResponseToJson(response);\n    return xml;\n  });\n}\nexport async function parseResponseToJson(response) {\n  const text = await response.text();\n  let result = text.substring(text.indexOf('<SOAP'), text.indexOf('</SOAP-ENV:Envelope>') + 20);\n  const xml = new XMLParser().parseFromString(result);\n  return xml;\n}","map":{"version":3,"sources":["C:\\Users\\eshpan\\Documents\\Projects\\Ffin-project\\src\\services\\ws-services.js"],"names":["XMLParser","require","login","password","basicAuthorizationToken","authenticate","fetch","method","headers","body","then","response","xml","parseResponseToJson","sessionId","getElementsByTagName","value","sessionStorage","setItem","callWebService","wsBody","text","result","substring","indexOf","parseFromString"],"mappings":"AAAA,MAAMA,SAAS,GAAGC,OAAO,CAAC,kBAAD,CAAzB;;AAEA,MAAMC,KAAK,GAAG,eAAd;AACA,MAAMC,QAAQ,GAAG,QAAjB;AACA,MAAMC,uBAAuB,GAAG,wBAAhC;AAEA,OAAO,SAASC,YAAT,GAAwB;AAC3BC,EAAAA,KAAK,CAAC,KAAD,EAAQ;AACTC,IAAAA,MAAM,EAAE,MADC;AAETC,IAAAA,OAAO,EAAE;AAAE,sBAAe,UAAjB;AAA6B,uBAAiBJ;AAA9C,KAFA;AAGTK,IAAAA,IAAI,EAAE,+GACE,mBADF,GAEE,gBAFF,GAGE,6BAHF,GAIM,YAJN,GAIqBP,KAJrB,GAI6B,aAJ7B,GAKM,eALN,GAKwBC,QALxB,GAKmC,gBALnC,GAME,8BANF,GAOE,iBAPF,GAQF;AAXK,GAAR,CAAL,CAYMO,IAZN,CAYW,MAAOC,QAAP,IAAoB;AACvB,UAAMC,GAAG,GAAG,MAAMC,mBAAmB,CAACF,QAAD,CAArC;AACA,UAAMG,SAAS,GAAGF,GAAG,CAACG,oBAAJ,CAAyB,eAAzB,EAA0C,CAA1C,EAA6CC,KAA/D;AACAC,IAAAA,cAAc,CAACC,OAAf,CAAuB,WAAvB,EAAoCJ,SAApC;AACJ,GAhBJ;AAiBH;AAED,OAAQ,SAASK,cAAT,CAAwBC,MAAxB,EAAgC;AACpC,QAAMX,IAAI,GACN,+GACA,mBADA,GAEA,gBAFA,GAGAW,MAHA,GAIA,iBAJA,GAKA,qBANJ;AAQA,SAAOd,KAAK,CAAC,KAAD,EAAQ;AAChBC,IAAAA,MAAM,EAAE,MADQ;AAEhBC,IAAAA,OAAO,EAAE;AAAE,sBAAe,UAAjB;AAA6B,uBAAiBJ;AAA9C,KAFO;AAGhBK,IAAAA;AAHgB,GAAR,CAAL,CAIDC,IAJC,CAIMC,QAAD,IAAc;AAClB,UAAMC,GAAG,GAAIC,mBAAmB,CAACF,QAAD,CAAhC;AACA,WAAOC,GAAP;AACJ,GAPG,CAAP;AAQH;AAED,OAAO,eAAeC,mBAAf,CAAoCF,QAApC,EAA8C;AACjD,QAAMU,IAAI,GAAG,MAAMV,QAAQ,CAACU,IAAT,EAAnB;AACA,MAAIC,MAAM,GAAGD,IAAI,CAACE,SAAL,CAAeF,IAAI,CAACG,OAAL,CAAa,OAAb,CAAf,EAAsCH,IAAI,CAACG,OAAL,CAAa,sBAAb,IAAuC,EAA7E,CAAb;AACA,QAAMZ,GAAG,GAAG,IAAIZ,SAAJ,GAAgByB,eAAhB,CAAgCH,MAAhC,CAAZ;AACA,SAAOV,GAAP;AACH","sourcesContent":["const XMLParser = require('react-xml-parser');\n\nconst login = 'ffinlife_site';\nconst password = '1q3wr2';\nconst basicAuthorizationToken = 'Basic a2FzcGk6a2FzcGk='\n\nexport function authenticate() {\n    fetch('/ws', {\n        method: 'post',\n        headers: { 'Content-Type':'text/xml', 'Authorization': basicAuthorizationToken },\n        body: '<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ws=\"http://ffinlife/ws\">' +\n                '<soapenv:Header/>' +\n                '<soapenv:Body>' +\n                '<ws:authorizationWSRequest>' +\n                    '<ws:login>' + login + '</ws:login>' +\n                    '<ws:password>' + password + '</ws:password>' +\n                '</ws:authorizationWSRequest>' +\n                '</soapenv:Body>' +\n            '</soapenv:Envelope>'\n       }).then(async (response) => {\n            const xml = await parseResponseToJson(response);\n            const sessionId = xml.getElementsByTagName('ns2:sessionId')[0].value;\n            sessionStorage.setItem('sessionId', sessionId);\n       });\n}\n\nexport  function callWebService(wsBody) {\n    const body = \n        '<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ws=\"http://ffinlife/ws\">' +\n        '<soapenv:Header/>' +\n        '<soapenv:Body>' +\n        wsBody + \n        '</soapenv:Body>' +\n        '</soapenv:Envelope>';\n\n    return fetch('/ws', {\n        method: 'post',\n        headers: { 'Content-Type':'text/xml', 'Authorization': basicAuthorizationToken },\n        body\n       }).then( (response) => {\n            const xml =  parseResponseToJson(response)\n            return xml;\n       });\n}\n\nexport async function parseResponseToJson (response) {\n    const text = await response.text();\n    let result = text.substring(text.indexOf('<SOAP'), text.indexOf('</SOAP-ENV:Envelope>') + 20);\n    const xml = new XMLParser().parseFromString(result); \n    return xml;\n}"]},"metadata":{},"sourceType":"module"}