{"version":3,"sources":["services/ws-services.js","services/fetcher.js","components/Calculator/Calculator.jsx","components/Registration/Registration.jsx","components/Payment/Payment.jsx","components/Initial.jsx","App.js","serviceWorker.js","index.js"],"names":["XMLParser","require","login","password","basicAuthorizationToken","authenticate","fetch","method","headers","Content-Type","Authorization","body","then","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","response","xml","sessionId","wrap","_context","prev","next","parseResponseToJson","sent","getElementsByTagName","value","sessionStorage","setItem","stop","_x","apply","this","arguments","callWebService","_x2","_callWebService","_callee3","wsBody","_context3","abrupt","_ref2","_callee2","_context2","_x4","_x3","_parseResponseToJson","_callee4","text","result","_context4","substring","indexOf","parseFromString","getCountries","_getCountries","countriesXml","countries","map","countryXml","codeXml","nameXml","territoryXml","code","name","territory","registrateTravelInsurance","_registrateTravelInsurance","country1","country2","country3","rprogSrok","email","rprogramm","progMaxDays","dateStart","dateEnd","curRate","iin","resId","address","sex","dateBirth","region","passportNum","passportGive","passportDate","passportDateEnd","doc_type","mobilePhone","phone","surname","messageXml","fioKir","fioLat","fioKir2","fioLat2","iin2","resId2","address2","sex2","dateBirth2","region2","passportNum2","passportGive2","passportDate2","passportDateEnd2","mobilePhone2","phone2","email2","console","log","getCalculatedTravelInsurancePremium","_x5","_getCalculatedTravelInsurancePremium","sumStrah","insuranceProgramm","beginDate","endDate","birthDate","rprogMaxDays","premiumXml","getTravelDurationList","_getTravelDurationList","label","getMaxNumberOfDaysAbroadList","_getMaxNumberOfDaysAbroadList","_callee5","_context5","getInsuredSumList","_getInsuredSumList","_callee6","_context6","Calculator","_React$Component","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","maxSelectCountry","onDataChange","event","target","setState","data","objectSpread","state","defineProperty","onFieldChange","onDataChangeByName","onBirthDateChange","onBeginDateChange","onEndDateChange","getParsedDataToBackend","selectedCountries","rest","objectWithoutProperties","format","length","calculate","insurancePremium","getItem","onAddCountry","concat","toConsumableArray","onDeleteCountry","index","splice","onSelectCountry","country","onMultiVisitChange","isMultiVisit","onFinish","showCountrySelectCount","insuredSumList","travelDurationList","abroadDaysList","inherits","createClass","key","getFilters","_getFilters","rawCountries","c","_this2","_this$state","_this$state$data","react_default","createElement","Paper","className","Grid","container","justify","spacing","item","xs","sm","react_select_browser_esm","options","placeholder","onChange","v","IconButton","onMouseDown","Delete_default","Button","variant","color","disabled","Add_default","FormControlLabel","control","Switch","react","md","FormControl","htmlFor","Select","inputProps","id","MenuItem","material_ui_pickers_esm","disablePast","minDate","InputLabel","disableFuture","openTo","views","alignItems","onClick","TextField","InputLabelProps","shrink","InputProps","readOnly","React","Component","Registration","validate","agreement","agreement2","isValid","onSelectFiles","files","onCheckedChangeByName","checked","onPassportDateChange","onPassportDateEndChange","sendRequest","registrationMessage1","registrationMessage","axios","post","_ref3","axiosToken","token","appendix_name","amount","doc_id","appendix","signed","signed_order","clientType","isNotResident","_this$state2","_this$state2$data","FormLabel","RadioGroup","row","Radio","Checkbox","href","onBack","Payment","paymentType","action","type","Initial","onCalculatorFinish","calcData","step","onFizLicoRegFinish","regData","onYurLicoRegFinish","onFizLicoPaymentFinish","onYurLicoPaymentFinish","onBackPressed","isFizLico","multivisit","inn","mobilePhon","paymentData","Calculator_Calculator","Registration_Registration","Payment_Payment","moment","locale","App","interval","setInterval","utils","MomentUtils","libInstance","AppBar","position","Toolbar","Initial_Initial","clearInterval","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ac70fc92.chunk.js","sourcesContent":["const XMLParser = require('react-xml-parser');\n\nconst login = 'ffinlife_site';\nconst password = '1q3wr2';\nconst basicAuthorizationToken = 'Basic a2FzcGk6a2FzcGk='\n\nexport function authenticate() {\n    fetch('/ws', {\n        method: 'post',\n        headers: { 'Content-Type':'text/xml', 'Authorization': basicAuthorizationToken },\n        body: '<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ws=\"http://ffinlife/ws\">' +\n                '<soapenv:Header/>' +\n                '<soapenv:Body>' +\n                '<ws:authorizationWSRequest>' +\n                    '<ws:login>' + login + '</ws:login>' +\n                    '<ws:password>' + password + '</ws:password>' +\n                '</ws:authorizationWSRequest>' +\n                '</soapenv:Body>' +\n            '</soapenv:Envelope>'\n       }).then(async (response) => {\n            const xml = await parseResponseToJson(response);\n            const sessionId = xml.getElementsByTagName('ns2:sessionId')[0].value;\n            sessionStorage.setItem('sessionId', sessionId);\n       });\n}\n\nexport async function callWebService(wsBody) {\n    const body = \n        '<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ws=\"http://ffinlife/ws\">' +\n        '<soapenv:Header/>' +\n        '<soapenv:Body>' +\n        wsBody + \n        '</soapenv:Body>' +\n        '</soapenv:Envelope>';\n\n    return fetch('/ws', {\n        method: 'post',\n        headers: { 'Content-Type':'text/xml', 'Authorization': basicAuthorizationToken },\n        body\n       }).then(async (response) => {\n            const xml = await parseResponseToJson(response)\n            return xml;\n       });\n}\n\nexport async function parseResponseToJson (response) {\n    const text = await response.text();\n    let result = text.substring(text.indexOf('<SOAP'), text.indexOf('</SOAP-ENV:Envelope>') + 20);\n    const xml = new XMLParser().parseFromString(result); \n    return xml;\n}","import { callWebService } from './ws-services';\n\nexport async function getCountries(sessionId) {\n    const wsBody = '<ws:cabCountryRequest>' +\n            '<ws:sessionId>' + sessionId + '</ws:sessionId>' +\n        '</ws:cabCountryRequest>';\n    const xml = await callWebService(wsBody, sessionId);\n    const countriesXml = xml.getElementsByTagName('ns2:countries');\n\n    const countries = countriesXml.map((countryXml) => {\n        const codeXml = countryXml.getElementsByTagName('ns2:codeOfCountry');\n        const nameXml = countryXml.getElementsByTagName('ns2:nameOfCountry');\n        const territoryXml = countryXml.getElementsByTagName('ns2:territoryCountry');\n\n        return {\n            code: codeXml[0] && codeXml[0].value,\n            name: nameXml[0] && nameXml[0].value,\n            territory: territoryXml[0] && territoryXml[0].value\n        };\n    });\n    return countries;\n}\n\nexport async function registrateTravelInsurance(sessionId, {country1, country2, country3, rprogSrok, email, rprogramm, progMaxDays, \n    dateStart, dateEnd, curRate, fioKir, fioLat, iin, resId, address, sex, dateBirth, region, fioKir2, fioLat2, iin2, resId2, address2, \n    sex2, dateBirth2, region2, passportNum, passportGive, passportDate, passportDateEnd, doc_type, passportNum2, passportGive2, \n    passportDate2, passportDateEnd2, mobilePhone, phone, mobilePhone2, phone2, email2, name, surname\n}) {\n    const wsBody = '<ws:registrationFreedomTravelRequest>' +\n            '<ws:sessionId>'+ sessionId +'</ws:sessionId>' +\n            '<ws:country1>'+ country1 +'</ws:country1>' +\n            '<ws:country2>'+ country2 +'</ws:country2>' +\n            '<ws:country3>'+ country3 +'</ws:country3>' +\n            '<ws:rprogramm>'+ rprogramm +'</ws:rprogramm>' +\n            '<ws:rprogSrok>'+ rprogSrok +'</ws:rprogSrok>' +\n            '<ws:progMaxDays>'+ progMaxDays +'</ws:progMaxDays>' +\n            '<ws:dateStart>'+ dateStart +'</ws:dateStart>' +\n            '<ws:dateEnd>'+ dateEnd +'</ws:dateEnd>' +\n            '<ws:curRate>'+ curRate +'</ws:curRate>' +\n            '<ws:fioKir>'+ surname + \" \"+ name +'</ws:fioKir>' +\n            '<ws:fioLat>'+ surname + \" \"+ name +'</ws:fioLat>' +\n            '<ws:inn>'+ iin +'</ws:inn>' +\n            '<ws:resId>'+ resId +'</ws:resId>' +\n            '<ws:address>'+ address +'</ws:address>' +\n            '<ws:sex>'+ sex + '</ws:sex>' +\n            '<ws:dateBirth>'+ dateBirth +'</ws:dateBirth>' +\n            '<ws:region>'+ region +'</ws:region>' +\n            '<ws:fioKir2>'+ surname + \" \"+ name +'</ws:fioKir2>' +\n            '<ws:fioLat2>'+ surname + \" \"+ name +'</ws:fioLat2>' +\n            '<ws:iin2>'+ iin +'</ws:iin2>' +\n            '<ws:resId2>'+ resId +'</ws:resId2>' +\n            '<ws:address2>'+ address +'</ws:address2>' +\n            '<ws:sex2>'+ sex +'</ws:sex2>' +\n            '<ws:dateBirth2>'+ dateBirth +'</ws:dateBirth2>' +\n            '<ws:region2>'+ region +'</ws:region2>' +\n            '<ws:passportNum>'+ passportNum +'</ws:passportNum>' +\n            '<ws:passportGive>'+ passportGive +'</ws:passportGive>' +\n            '<ws:passportDate>'+ passportDate +'</ws:passportDate>' +\n            '<ws:passportDateEnd>'+ passportDateEnd +'</ws:passportDateEnd>' +\n            '<ws:doc_type>'+ doc_type +'</ws:doc_type>' +\n            '<ws:passportNum2>'+ passportNum +'</ws:passportNum2>' +\n            '<ws:passportGive2>'+ passportGive +'</ws:passportGive2>' +\n            '<ws:passportDate2>'+ passportDate +'</ws:passportDate2>' +\n            '<ws:passportDateEnd2>'+ passportDateEnd +'</ws:passportDateEnd2>' +\n            '<ws:mobilePhone>'+ mobilePhone +'</ws:mobilePhone>' +\n            '<ws:phone>'+ phone +'</ws:phone>' +\n            '<ws:email>'+ email +'</ws:email>' +\n            '<ws:mobilePhone2>'+ mobilePhone +'</ws:mobilePhone2>' +\n            '<ws:phone2>'+ phone +'</ws:phone2>' +\n            '<ws:email2>'+ email +'</ws:email2>' +\n        '</ws:registrationFreedomTravelRequest>';\n    const xml = await callWebService(wsBody);\n    console.log(\"regbody : \" + wsBody);\n    console.log(\"xml :\" , xml);\n    const messageXml = xml.getElementsByTagName('ns2:message');\n    return messageXml[0] && messageXml[0].value;\n}\n\nexport async function getCalculatedTravelInsurancePremium(sessionId, {\n    country1, country2, country3, sumStrah, insuranceProgramm, beginDate, endDate, birthDate, rprogSrok, rprogMaxDays, email\n}) {\n    const wsBody = '<ws:calculatorFreedomTravelRequest>' +\n            '<ws:sessionId>' + sessionId + '</ws:sessionId>' +\n            '<ws:country1>' + country1 + '</ws:country1>'+\n            '<ws:country2>' + country2 + '</ws:country2>'+\n            '<ws:country3>' + country3 + '</ws:country3>'+\n            '<ws:sumStrah>' + sumStrah + '</ws:sumStrah>'+\n            '<ws:insuranceProgramm>' + insuranceProgramm + '</ws:insuranceProgramm>'+\n            '<ws:beginDate>' + beginDate + '</ws:beginDate>'+\n            '<ws:endDate>' + endDate + '</ws:endDate>'+\n            '<ws:birthDate>' + birthDate + '</ws:birthDate>'+\n            '<ws:rprogSrok>' + rprogSrok + '</ws:rprogSrok>'+\n            '<ws:rprogMaxDays>' + rprogMaxDays + '</ws:rprogMaxDays>'+\n            '<ws:email>' + email + '</ws:email>'+\n        '</ws:calculatorFreedomTravelRequest>';\n    const xml = await callWebService(wsBody);\n    const premiumXml = xml.getElementsByTagName('ns2:premKz');\n\n    console.log(\"body : \" + wsBody);\n    console.log(\"xml :\" , xml);\n\n    return premiumXml[0] && premiumXml[0].value;\n}\n\nexport async function getTravelDurationList() {\n    return [\n        { value: '1', label: 'до 6 месяцев' },\n        { value: '2', label: 'от 6 до 9 месяцев' },\n        { value: '3', label: 'от 9 до 12 месяцев' }\n    ];\n};\n\nexport async function getMaxNumberOfDaysAbroadList() {\n    return [\n        { value: '1', label: 'до 30 дней' },\n        { value: '2', label: 'до 60 дней' },\n        { value: '3', label: 'до 90 дней' },\n        { value: '4', label: 'до 180 дней' },\n    ];\n};\n\nexport async function getInsuredSumList() {\n    return [\n        { value: '10000', label: '10 000 Евро' },\n        { value: '20000', label: '20 000 Евро' },\n        { value: '30000', label: '30 000 Евро' },\n        { value: '50000', label: '50 000 Евро' },\n        { value: '70000', label: '70 000 Евро' },\n        { value: '100000', label: '100 000 Евро' }\n    ];\n};","import React, { Fragment } from 'react';\nimport { Grid, IconButton, TextField, Button, Select, MenuItem, FormControl, FormControlLabel, InputLabel, Switch, Paper } from '@material-ui/core';\nimport { KeyboardDatePicker } from '@material-ui/pickers';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddIcon from '@material-ui/icons/Add';\nimport ReactSelect from 'react-select';\nimport {\n    getCountries,\n    getCalculatedTravelInsurancePremium,\n    getInsuredSumList,\n    getMaxNumberOfDaysAbroadList,\n    getTravelDurationList\n} from '../../services';\nimport { thisTypeAnnotation } from '@babel/types';\n\nexport class Calculator extends React.Component {\n\n    maxSelectCountry = 3;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data: {\n                country1: '',\n                country2: '',\n                country3: '',\n                sumStrah: '',\n                insuranceProgramm: 1,\n                beginDate: null,\n                endDate: null,\n                birthDate: null,\n                rprogSrok: '',\n                rprogMaxDays: '',\n                email: ''\n            },\n            insurancePremium: '',\n            selectedCountries: [''],\n            showCountrySelectCount: 1,\n            isMultiVisit: false,\n            insuredSumList: [],\n            travelDurationList: [],\n            abroadDaysList: [],\n            countries: []\n        }\n    }\n\n    componentDidMount() {\n        this.getFilters();\n    }\n\n    async getFilters() {\n        const insuredSumList = await getInsuredSumList();\n        const travelDurationList = await  getTravelDurationList();\n        const abroadDaysList = await getMaxNumberOfDaysAbroadList();\n        const sessionId = sessionStorage.getItem('sessionId');\n        const rawCountries = await getCountries(sessionId);\n        const countries = rawCountries ? rawCountries.map((c) => ({ value: c.code, label: c.name})) : [];\n        this.setState({\n            countries,          \n            insuredSumList,\n            travelDurationList,\n            abroadDaysList\n        })\n    }\n\n    onDataChange = (event) => {\n        const name = event.target.name;\n        const value = event.target.value;\n        this.setState({\n            data: {\n                ...this.state.data,\n                [name]: value\n            }\n        });\n    }\n\n    onFieldChange = (event) => {\n        const name = event.target.name;\n        const value = event.target.value;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    onDataChangeByName = (name) => (value) => {\n        this.onDataChange({ target: { name, value } });\n    }\n\n    onBirthDateChange = this.onDataChangeByName('birthDate');\n    onBeginDateChange = this.onDataChangeByName('beginDate');\n    onEndDateChange = this.onDataChangeByName('endDate');\n\n    getParsedDataToBackend = (data) => {\n        const { selectedCountries } = this.state;\n        let { beginDate, endDate, birthDate, country1, country2, country3, ...rest } = data;\n        beginDate = beginDate.format('DD.MM.YYYY');\n        endDate = endDate.format('DD.MM.YYYY');\n        birthDate = birthDate.format('DD.MM.YYYY');\n        country1 = (selectedCountries.length >= 1 && selectedCountries[0].value) || '';\n        country2 = (selectedCountries.length >= 2 && selectedCountries[1].value) || '';\n        country3 = (selectedCountries.length >= 3 && selectedCountries[2].value) || '';\n        return { ...rest, beginDate, endDate, birthDate, country1, country2, country3 };\n    }\n\n    calculate = async () => {\n        const sessionId = sessionStorage.getItem('sessionId');\n        const data = this.getParsedDataToBackend(this.state.data);\n        const insurancePremium = await getCalculatedTravelInsurancePremium(sessionId, data);\n        this.setState({ insurancePremium });\n    }\n\n    onAddCountry = () => {\n        const { selectedCountries } = this.state;\n        if (selectedCountries.length < this.maxSelectCountry) {\n            this.setState({\n                selectedCountries: [ ...selectedCountries, '']\n            })\n        }\n    }\n\n    onDeleteCountry = (index) => {\n        const selectedCountries = [ ...this.state.selectedCountries ];\n        if (selectedCountries.length > 1) {\n            selectedCountries.splice(index, 1);\n            this.setState({ selectedCountries });\n        }\n    }\n\n    onSelectCountry = (index, country) => {\n        const selectedCountries = [ ...this.state.selectedCountries ];\n        selectedCountries[index] = { ...country };\n        this.setState({ selectedCountries });\n    }\n\n    onMultiVisitChange = (event) => {\n        this.setState({ isMultiVisit: !this.state.isMultiVisit })\n    }\n\n    onFinish = async () => {\n        this.props.onFinish(this.state);\n    }\n\n    render(){\n        const { \n            data: {\n                sumStrah, \n                insuranceProgramm, \n                beginDate, \n                endDate, \n                birthDate, \n                rprogSrok, \n                rprogMaxDays, \n                email\n            },\n            selectedCountries,\n            abroadDaysList,\n            insuredSumList,\n            travelDurationList,\n            insurancePremium,\n            isMultiVisit,\n            countries\n        } = this.state;\n\n        return (\n            <Paper className=\"calculator-page\">\n                <h2 className=\"page-title\">Рассчитать страховую премию</h2>\n\n                <Grid container justify=\"space-around\" spacing={ 2 }>\n                    \n                    <Grid item xs={ 12 }>\n                        <Grid container spacing={ 2 }>\n                            <Grid item sm={ 7 } xs={ 12 }>\n                                <Grid container spacing={ 2 }>\n                                    { selectedCountries && selectedCountries.map((c, index) => (\n                                        <Grid item key={ index } xs={ 12 }>\n                                            <ReactSelect\n                                                className=\"react-select\"\n                                                value={ c }\n                                                options={ countries }\n                                                placeholder=\"Выберите страну\"\n                                                onChange={ (v) => this.onSelectCountry(index, v) }\n                                            />\n                                            { selectedCountries.length > 1 && (\n                                                <IconButton\n                                                    onMouseDown={ () => this.onDeleteCountry(index) }\n                                                >\n                                                    <DeleteIcon />\n                                                </IconButton>\n                                            ) }\n                                        </Grid>                                            \n                                    )) }\n                                </Grid>\n                            </Grid>\n                            <Grid item sm={ 5 } xs={ 12 }>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                    onMouseDown={ this.onAddCountry }\n                                    disabled={ selectedCountries.length === this.maxSelectCountry }\n                                >\n                                    <AddIcon />\n                                    Добавить страну\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n\n                    <Grid item xs={ 12 }>\n                        <FormControlLabel\n                            control={\n                                <Switch\n                                    value={ isMultiVisit }\n                                    onChange={ this.onMultiVisitChange }\n                                />\n                            }\n                            label=\"Многократная страховка\"\n                        />\n                    </Grid>\n\n                    { isMultiVisit && <Fragment>   \n                        <Grid item xs={ 12 } md={ 6 }>\n                            <FormControl className=\"form-control\">\n                                <label htmlFor=\"travel-duration\" className=\"form-label\">Продолжительность путешествия</label>\n                                <Select\n                                    onChange={ this.onDataChange }\n                                    value={ rprogSrok }\n                                    inputProps={{\n                                        name: 'rprogSrok',\n                                        id: 'travel-duration'\n                                    }}\n                                >\n                                    { travelDurationList && travelDurationList.map((item) => \n                                        <MenuItem key={item.value} value={item.value}>{item.label}</MenuItem>) }\n                                </Select>\n                            </FormControl>\n                        </Grid>\n\n                        <Grid item xs={ 12 } md={ 6 }>\n                            <FormControl className=\"form-control\">\n                                <label htmlFor=\"abroad-days\" className=\"form-label\">Максимально кол-во дней за границей</label>\n                                <Select\n                                    onChange={ this.onDataChange }\n                                    value={ rprogMaxDays }\n                                    inputProps={{\n                                        name: 'rprogMaxDays',\n                                        id: 'abroad-days'\n                                    }}\n                                >\n                                    { abroadDaysList && abroadDaysList.map((item) => \n                                        <MenuItem key={item.value} value={item.value}>{item.label}</MenuItem>) }\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                    </Fragment> }                    \n\n                    <Grid item xs={ 12 } md={ 6 }>\n                        <KeyboardDatePicker\n                            disablePast\n                            format=\"DD.MM.YYYY\"\n                            label=\"Когда уезжаете?\"\n                            value={ beginDate }\n                            onChange={ this.onBeginDateChange }\n                        />\n                    </Grid>\n\n                    <Grid item xs={ 12 } md={ 6 }>\n                        <KeyboardDatePicker\n                            disablePast\n                            minDate={ beginDate }\n                            format=\"DD.MM.YYYY\"\n                            label=\"Когда возвращаетесь?\"\n                            value={ endDate }\n                            onChange={ this.onEndDateChange }\n                        />\n                    </Grid>\n\n                    <Grid item xs={ 12 } md={ 6 }>\n                        <FormControl className=\"form-control\">\n                            <InputLabel htmlFor=\"insured-sum\">Страховая сумма</InputLabel>\n                            <Select\n                                onChange={ this.onDataChange }\n                                value={ sumStrah }\n                                inputProps={{\n                                    name: 'sumStrah',\n                                    id: 'insured-sum'\n                                }}\n                            >\n                                { insuredSumList && insuredSumList.map((item) => \n                                    <MenuItem key={item.value} value={item.value}>{item.label}</MenuItem>) }\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={ 12 } md={ 6 }>\n                        <KeyboardDatePicker\n                            disableFuture\n                            openTo=\"year\"\n                            format=\"DD.MM.YYYY\"\n                            views={[\"year\", \"month\", \"date\"]}\n                            label=\"Дата рождения\"\n                            value={ birthDate }\n                            onChange={ this.onBirthDateChange }\n                        />\n                    </Grid>\n\n                    <Grid item xs={ 12 }>\n                        <Grid container spacing={ 2 } alignItems=\"center\">\n                            <Grid item>\n                                <Button variant=\"contained\" color=\"secondary\" onClick={ this.calculate }>Рассчитать</Button>\n                            </Grid>\n                            <Grid item>\n                                <TextField\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                    label=\"Страховая премия\"\n                                    value={ insurancePremium }\n                                    InputProps={ { readOnly: true } }\n                                />\n                            </Grid>\n                        </Grid>                \n                    </Grid>\n\n                    <Grid item xs={ 12 }>\n                        <Button variant=\"contained\" color=\"primary\" onClick={ this.onFinish }>Оформить сейчас</Button>\n                    </Grid>            \n                    \n                </Grid>\n                \n            </Paper>\n        );\n    }\n\n}\n\n","import React, { Fragment } from 'react';\nimport { Grid, Radio, RadioGroup, Checkbox, IconButton, TextField, Button, Select, MenuItem, FormControl, FormLabel, FormControlLabel, InputLabel, Switch, List, ListItem, ListItemText, ListItemSecondaryAction, Paper } from '@material-ui/core';\nimport { KeyboardDatePicker } from '@material-ui/pickers';\nimport axios from 'axios';\nimport { DropzoneArea } from 'material-ui-dropzone'\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddIcon from '@material-ui/icons/Add';\n// import ReactSelect from 'react-select';\nimport {\n    registrateTravelInsurance\n} from '../../services';\n\nexport class Registration extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            clientType: '1',\n            isValid: false,\n            isNotResident: false,\n            files: [],\n            data: {\n                country1: this.props.data.selectedCountries[0].value,\n                country2: this.props.data.selectedCountries[1] ? this.props.data.selectedCountries[1].value : '',  \n                country3: this.props.data.selectedCountries[2] ? this.props.data.selectedCountries[2].value : '', \n                rprogramm: this.props.data.data.insuranceProgramm,  \n                rprogSrok: this.props.data.data.rprogSrok, \n                progMaxDays: this.props.data.data.rprogMaxDays, \n                dateStart: this.props.data.data.beginDate, \n                dateEnd: this.props.data.data.endDate, \n                curRate: this.props.data.data.sumStrah, \n                fioKir: '', \n                fioLat: '', \n                iin: '', \n                resId: 1, \n                address: '', \n                sex: '', \n                dateBirth: this.props.data.data.birthDate, \n                region: 15188446, \n                fioKir2: '', \n                fioLat2: '', \n                iin2: '', \n                resId2: 1, \n                address2: '', \n                sex2: '', \n                dateBirth2: this.props.data.data.birthDate, \n                region2: 15188446, \n                passportNum: '', \n                passportGive: '', \n                passportDate: null, \n                passportDateEnd: null, \n                doc_type: 13310362, \n                passportNum2: '', \n                passportGive2: '', \n                passportDate2: null, \n                passportDateEnd2: null, \n                mobilePhone: '', \n                phone: '', \n                email: '', \n                mobilePhone2: '',\n                phone2: '', \n                email2: '',\n                appendix_name: \"mst\",\n                registrationMessage: '',\n                signed: '',\n                appendix: '',\n                axiosToken: ''\n            },\n            agreement: false,\n            agreement2: false\n        }\n    }\n\n    validate = () => {\n        const {\n            agreement,\n            agreement2,\n            name,\n            surname\n        } = this.state;\n\n        const isValid = agreement && agreement2 && name && surname;\n        this.setState({ isValid });\n        return isValid;\n    }\n\n    onSelectFiles = (files) => {\n        this.setState({ files });\n    }\n\n    onFieldChange = (event) => {\n        const name = event.target.name;\n        const value = event.target.value;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    onDataChange = (event) => {\n        const name = event.target.name;\n        const value = event.target.value;\n        this.setState({\n            data: {\n                ...this.state.data,\n                [name]: value\n            }\n        });\n    }\n\n    onCheckedChangeByName = (name) => (event) => {\n        this.setState({\n            [name]: event.target.checked\n        });\n    }\n\n    onDataChangeByName = (name) => (value) => {\n        this.onDataChange({ target: { name, value } });\n    }\n\n    onPassportDateChange = this.onDataChangeByName('passportDate');\n    onPassportDateEndChange = this.onDataChangeByName('passportDateEnd');\n\n    getParsedDataToBackend = (data) => {\n        let { country1, country2, country3, rprogSrok, email, rprogramm, progMaxDays, dateStart, dateEnd, curRate, fioKir, fioLat, iin,\n            resId, address, sex, dateBirth, region, fioKir2, fioLat2, iin2, resId2, address2, sex2, dateBirth2, region2, passportNum,\n            passportGive, passportDate, passportDateEnd, doc_type, passportNum2, passportGive2, passportDate2, passportDateEnd2, mobilePhone,\n            phone, mobilePhone2, phone2, email2, name, surname, ...rest } = data;\n\n\n            passportDate = passportDate.format('DD.MM.YYYY');\n            passportDateEnd = passportDateEnd.format('DD.MM.YYYY');\n            dateBirth = dateBirth.format('DD.MM.YYYY');\n            dateBirth2 = dateBirth2.format('DD.MM.YYYY');\n            dateStart = dateStart.format('DD.MM.YYYY');\n            dateEnd = dateEnd.format('DD.MM.YYYY');\n            name = this.state.name;\n            surname = this.state.surname;\n            \n            \n        return { ...rest, country1, country2, country3, rprogSrok, email, rprogramm, progMaxDays, dateStart, dateEnd, curRate, fioKir, fioLat, iin,\n            resId, address, sex, dateBirth, region, fioKir2, fioLat2, iin2, resId2, address2, sex2, dateBirth2, region2, passportNum,\n            passportGive, passportDate, passportDateEnd, doc_type, passportNum2, passportGive2, passportDate2, passportDateEnd2, mobilePhone,\n            phone, mobilePhone2, phone2, email2, name, surname };\n    }\n\n    sendRequest = async () => {\n        const sessionId = sessionStorage.getItem('sessionId');\n        const data = this.getParsedDataToBackend(this.state.data);\n        const registrationMessage1 = await registrateTravelInsurance(sessionId, data);\n        this.state.data.registrationMessage = registrationMessage1;\n        // this.setState({ registrationMessage:  registrationMessage1});\n        console.log(\"reg res : \" + this.state.data.registrationMessage );\n    }\n\n    onFinish = async () => {\n        await axios.post('https://pay.ffin.life/auth_token', {\n            'iin': this.state.data.iin,\n        }).then( async (response) => {\n            let axiosToken = response.data.token;\n            this.setState({\n                axiosToken\n            });\n            \n            await this.sendRequest();\n            console.log(\"doc _ id \" + this.state.data.registrationMessage);\n            await axios.post('https://pay.ffin.life/form-data', {\n            'iin': this.state.data.iin,\n            'appendix_name': this.state.data.appendix_name,\n            'amount': this.props.data.insurancePremium,\n            'doc_id': this.state.data.registrationMessage,\n            'token': axiosToken\n        }).then( (response) => {\n            let appendix = response.data.appendix;\n            let signed = response.data.signed_order;\n            this.setState({\n                appendix,\n                signed\n            }, async () => {\n                this.props.onFinish(this.state);\n            });\n            \n        });\n            \n        });\n        \n    }\n\n    render() {\n        const {\n            clientType,\n            isValid,\n            name,\n            surname,\n            isNotResident,\n            agreement,\n            agreement2,\n            data: {\n                iin,\n                address,\n                sex,\n                resId,\n                passportNum,\n                passportDate,\n                passportDateEnd,\n                passportGive,\n                mobilePhone,\n                email\n            }\n        } = this.state;\n\n        const {\n            insurancePremium\n        } = this.props;\n\n        console.log('state', this.state);\n\n        return (\n            <Paper className=\"registration-page\">\n                <h2 className=\"page-title\">Офомление полиса</h2>\n                <Grid container justify=\"space-around\" spacing={ 2 }>\n                    <Grid item xs={ 12 }>\n                        <FormControl className=\"radiogroup\">\n                            <FormLabel>Выберите тип лица:</FormLabel>\n                            <RadioGroup\n                                row={ true }\n                                value={ clientType }\n                                name=\"clientType\"\n                                onChange={ this.onDataChange }\n                            >\n                                <FormControlLabel\n                                    value=\"1\"\n                                    control={<Radio  color=\"primary\" />}\n                                    label=\"Физическое лицо\"\n                                />\n                                <FormControlLabel\n                                    disabled\n                                    value=\"2\"\n                                    control={<Radio color=\"primary\" />}\n                                    label=\"Юридическое лицо\"\n                                />\n                            </RadioGroup>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={ 12 } md={ 6 }>\n                        <TextField\n                            InputProps={ { name: 'surname' } }\n                            label=\"Фамилия на латинице\"\n                            value={ surname }\n                            onChange={ this.onFieldChange }\n                        />\n                    </Grid>\n\n                    <Grid item xs={ 12 } md={ 6 }>\n                        <TextField\n                            InputProps={ { name: 'name' } }\n                            label=\"Имя на латинице\"\n                            value={ name }\n                            onChange={ this.onFieldChange }\n                        />\n                    </Grid>\n\n                    <Grid item xs={ 12 }>\n                        <FormControl className=\"radiogroup\">\n                            <FormLabel>Пол:</FormLabel>\n                            <RadioGroup\n                                row={ true }\n                                value={ sex }\n                                name=\"sex\"\n                                onChange={ this.onDataChange }\n                            >\n                                <FormControlLabel\n                                    control={<Radio value=\"1\" color=\"primary\" />}\n                                    label=\"Муж\"\n                                />\n                                <FormControlLabel\n                                    control={<Radio value=\"2\" color=\"primary\" />}\n                                    label=\"Жен\"\n                                />\n                            </RadioGroup>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={ 12 } md={ 6 }>\n                        <TextField\n                            InputProps={ { name: 'iin' } }\n                            label=\"ИИН\"\n                            value={ iin }\n                            onChange={ this.onDataChange }\n                        />\n                    </Grid>\n\n                    <Grid item xs={ 12 } md={ 6 }>\n                        <TextField\n                            InputProps={ { name: 'address' } }\n                            label=\"Адрес проживание\"\n                            value={ address }\n                            onChange={ this.onDataChange }\n                        />\n                    </Grid>\n\n                    <Grid item xs={ 12 }>\n                        <FormControlLabel\n                            control={<Checkbox checked={ isNotResident } onChange={ this.onCheckedChangeByName('isNotResident') } />}\n                            label=\"Не являюсь резидентом РК\"\n                        />\n                        { isNotResident && <FormControl className=\"form-control\">\n                            <InputLabel htmlFor=\"resident\">Страна резидентсва</InputLabel>\n                            <Select\n                                onChange={ this.onDataChange }\n                                value={ resId }\n                                inputProps={{\n                                    name: 'resId',\n                                    id: 'resident'\n                                }}\n                            >\n                                <MenuItem value=\"USA\"> США</MenuItem>\n                                <MenuItem value=\"ENG\"> Англия</MenuItem>\n                                <MenuItem value=\"GER\"> Германия</MenuItem>\n                                <MenuItem value=\"RU\"> Россия</MenuItem>\n                            </Select>\n                        </FormControl> }\n                    </Grid>\n\n                    <Grid item xs={ 12 } md={ 6 }>\n                        <TextField\n                            InputProps={ { name: 'passportNum' } }\n                            label=\"Номер Паспорта\"\n                            value={ passportNum }\n                            onChange={ this.onDataChange }\n                        />\n                    </Grid>\n\n                    <Grid item xs={ 12 } md={ 6 }>\n                        <FormControl className=\"form-control\">\n                            <InputLabel htmlFor=\"passport-give\">Кем выдан?</InputLabel>\n                            <Select\n                                onChange={ this.onDataChange }\n                                value={ passportGive }\n                                inputProps={{\n                                    name: 'passportGive',\n                                    id: 'passport-give'\n                                }}\n                            >\n                                <MenuItem value=\"MU\"> МЮ РК</MenuItem>\n                                <MenuItem value=\"MVD\"> МВД РК</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={ 12 } md={ 6 }>\n                        <KeyboardDatePicker\n                            disableFuture\n                            openTo=\"year\"\n                            format=\"DD.MM.YYYY\"\n                            views={[\"year\", \"month\", \"date\"]}\n                            label=\"Дата выдачи\"\n                            value={ passportDate }\n                            onChange={ this.onDataChangeByName('passportDate') }\n                        />\n                    </Grid>\n\n                    <Grid item xs={ 12 } md={ 6 }>\n                        <KeyboardDatePicker\n                            disablePast\n                            openTo=\"year\"\n                            format=\"DD.MM.YYYY\"\n                            views={[\"year\", \"month\", \"date\"]}\n                            label=\"Дата окончания\"\n                            value={ passportDateEnd }\n                            onChange={ this.onDataChangeByName('passportDateEnd') }\n                        />\n                    </Grid>\n\n                    {/* <Grid item xs={ 12 }>\n                        <DropzoneArea\n                            dropZoneClass=\"dropzone\"\n                            acceptedFiles={['image/jpeg', 'image/png', 'application/pdf']}\n                            dropzoneText=\"+ Прикрепить скан или фото документа\"\n                            onChange={ this.onSelectFiles }\n                            maxFileSize={5000000}\n                        />\n                    </Grid> */}\n\n                    <Grid item xs={ 12 } md={ 6 }>\n                        <TextField\n                            InputProps={ { name: 'mobilePhone' } }\n                            label=\"Ваш телефон\"\n                            value={ mobilePhone }\n                            onChange={ this.onDataChange }\n                        />\n                    </Grid>\n\n                    <Grid item xs={ 12 } md={ 6 }>\n                        <TextField\n                            InputProps={ { name: 'email' } }\n                            label=\"E-mail\"\n                            value={ email }\n                            onChange={ this.onDataChange }\n                        />\n                    </Grid>\n\n                    <Grid item >\n                        <TextField\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            label=\"Страховая премия, тенге\"\n                            value={ this.props.data.insurancePremium }\n                            InputProps={ { readOnly: true } }\n                        />\n                    </Grid>\n\n                    <Grid item xs={ 12 }>\n                        <FormControlLabel\n                            control={<Checkbox checked={ agreement } onChange={ this.onCheckedChangeByName('agreement') }/>}\n                            label={ <Fragment>\n                                Ознакомлен и согласен с <a href=\"https://drive.google.com/file/d/1ZeDOAJfVjW4siNQFmMEbmf_u3iGktRZf/view\">правилами страхования</a> и даю согласия на сбор и <a href=\"#\">обработку персоналных данных</a>\n                            </Fragment> }\n                        />\n                        <FormControlLabel\n                            control={<Checkbox checked={ agreement2 } onChange={ this.onCheckedChangeByName('agreement2') } />}\n                            label=\"Не являюсь иностранным публичным должностным лицом\"\n                        />                    \n                    </Grid>\n\n                    <Grid item xs={ 12 }>\n                        <Button variant=\"contained\" color=\"default\" className=\"btn-back\" onClick={ this.props.onBack }>Назад</Button>\n                        <Button variant=\"contained\" color=\"primary\" onClick={ this.onFinish } /* disabled={ !isValid } */>Перейти к оплате</Button>\n                    </Grid> \n\n                </Grid>\n            </Paper>\n        );\n    }\n}","import React from 'react';\nimport { Radio, RadioGroup, Button, FormControl, FormLabel, FormControlLabel, Paper } from '@material-ui/core';\n\nexport class Payment extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isValid: false,\n            paymentType: ''\n        }\n    }\n\n    onFieldChange = (event) => {\n        const name = event.target.name;\n        const value = event.target.value;\n        this.setState({\n            [name]: value\n        }, this.validate);\n    }\n\n    validate = () => {\n        const { paymentType } = this.state;\n        const isValid = !!paymentType;\n        this.setState({ isValid });\n    }\n\n    onFinish = async () => {\n        this.props.onFinish(this.state);\n    }\n\n    render() {\n        const {\n            isValid,\n            paymentType\n        } = this.state;\n\n        return (\n            <Paper className=\"payment-page\">\n                <h2 className=\"page-title\">Оплата</h2>\n                <FormControl>\n                    <FormLabel>Выберите способ оплаты:</FormLabel>\n                    <RadioGroup\n                        value={ paymentType }\n                        name=\"paymentType\"\n                        onChange={ this.onFieldChange }\n                    >\n                        <FormControlLabel\n                            value=\"1\"\n                            control={<Radio  color=\"primary\" />}\n                            label=\"Банковский картой\"\n                        />\n                        <FormControlLabel\n                            disabled\n                            value=\"2\"\n                            control={<Radio color=\"primary\" />}\n                            label=\"Kaspi кошелок\"\n                        />\n                    </RadioGroup>\n                </FormControl>\n\n                <div>\n                <form action=\"https://epay.kkb.kz/jsp/process/logon.jsp\" method=\"post\">\n                    <input type=\"hidden\" name=\"email\" value={ this.props.data.data.email}/>\n                    <input type=\"hidden\" name=\"BackLink\" value=\"https://ffin.life/\"/>\n                    <input type=\"hidden\" name=\"FailureBackLink\" value=\"https://ffin.life/\"/>\n                    <input type=\"hidden\" name=\"PostLink\" value=\"https://pay.ffin.life/post-link\"/>\n                    <input type=\"hidden\" name=\"FailurePostLink\" value=\"https://ffin.life/\"/>\n                    <input type=\"hidden\" name=\"Language\" value=\"rus\"/>\n                    <input type=\"hidden\" name=\"appendix\" value={this.props.data.appendix}/>\n                    <input type=\"hidden\" name=\"Signed_Order_B64\" value={this.props.data.signed}/>\n                    <br></br>\n                    \n                    <Button variant=\"contained\" color=\"default\" className=\"btn-back\" onClick={ this.props.onBack }>Назад</Button>\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\" onClick={ this.onFinish } disabled={ !isValid }>Оплатить</Button>\n                </form>\n                </div>\n            </Paper>\n        );\n    }\n}","import * as React from 'react'\n// import './Calculator/Calculator.css'\n// import './Registration/FizLicoRegForm.css'\n// import './Registration/YurLicoRegForm.css'\nimport { Calculator } from './Calculator/Calculator';\nimport { Registration } from './Registration/Registration';\nimport { Payment } from './Payment';\n// import { FizLicoRegForm } from './Registration/FizLicoRegForm';\n// import { YurLicoRegForm } from './Registration/YurLicoRegForm';\n\nexport class Initial extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            step: 1,\n            isFizLico: true,\n            calcData: {\n                showCountrySelectCount: 1,\n                country1: '',\n                country2: '',  \n                country3: '', \n                sumStrah: '', \n                insuranceProgramm: 1, \n                beginDate: '', \n                endDate: '', \n                birthDate: '', \n                rprogSrok: '', \n                rprogMaxDays: '', \n                email: '',\n                multivisit: false\n            },\n            regData: {\n                country1: '',\n                country2: '',  \n                country3: '', \n                rprogramm: '',  \n                rprogSrok: '', \n                progMaxDays: '', \n                dateStart: '', \n                dateEnd: '', \n                curRate: '', \n                fioKir: '', \n                fioLat: '', \n                inn: '', \n                resId: '', \n                address: '', \n                sex: '', \n                dateBirth: '', \n                region: '', \n                fioKir2: '', \n                fioLat2: '', \n                iin2: '', \n                resId2: '', \n                address2: '', \n                sex2: '', \n                dateBirth2: '', \n                region2: '', \n                passportNum: '', \n                passportGive: '', \n                passportDate: '', \n                passportDateEnd: '', \n                doc_type: '', \n                passportNum2: '', \n                passportGive2: '', \n                passportDate2: '', \n                passportDateEnd2: '', \n                mobilePhone: '', \n                phone: '', \n                email: '', \n                mobilePhon: '',\n                phone2: '', \n                email2: '', \n                appendix: '',\n                signed: ''\n            },\n            paymentData: {\n                appendix: '',\n                signed: '',\n                email: '',\n\n            }\n        }\n    }\n\n    onCalculatorFinish = (data) => {\n        this.setState({\n            calcData: data,\n            step: 2\n        })\n    }\n\n    onFizLicoRegFinish = (data) => {\n        this.setState({\n            regData: data,\n            step: 3\n        })\n    }\n\n    onYurLicoRegFinish = (data) => {\n        this.setState({\n            regData: data,\n            step: 3\n        })\n    }\n\n    onFizLicoPaymentFinish = (data) => {\n        this.setState({\n\n        })\n    }\n\n    onYurLicoPaymentFinish = (data) => {\n        this.setState({\n\n        })\n    }\n\n    onBackPressed = () => {\n        this.setState({\n            step: this.state.step - 1\n        });\n    }\n\n    render(){\n        const { step, isFizLico } = this.state;\n        return (\n            <div>\n                { step == 1 && \n                    <Calculator onFinish = { this.onCalculatorFinish }/>\n                }\n\n                {\n                    step === 2 &&\n                    <Registration data= {this.state.calcData} onFinish={ this.onFizLicoRegFinish } onBack={ this.onBackPressed } />\n                }\n\n                {\n                    step === 3 &&\n                    <Payment data= {this.state.regData} onFinish={ this.onFizLicoPaymentFinish } onBack={ this.onBackPressed } /> \n                }\n                \n                {/* { step == 2 && isFizLico &&\n                    <FizLicoRegForm onFinish = { this.onFizLicoRegFinish }/>\n                }\n                { step == 2 && !isFizLico &&\n                    <YurLicoRegForm onFinish = { this.onYurLicoRegFinish }/>\n                } */}\n\n                {/*{ step == 3 && isFizLico == true &&\n                        <FizLicoPaymentForm onFinish = { this.onFizLicoPaymentFinish }/> \n                }\n                { step == 3 && !isFizLico == false &&\n                        <YurLicoPaymentForm onFinish = { this.onYurLicoPaymentFinish }/> \n                } */}\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport MomentUtils from '@date-io/moment';\nimport { AppBar, Paper, Toolbar } from '@material-ui/core';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport moment from 'moment';\nimport \"moment/locale/ru\";\n/* Components */\n// import { Calculator } from './components/Calculator'\n// import { FizLicoRegForm } from './components/Registration/FizLicoRegForm';\n// import { Registration } from './components/Registration/Registration';\nimport { authenticate } from './services/ws-services'\nimport { Initial } from './components/Initial'\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nmoment.locale('ru');\n\nclass  App extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    authenticate();\n    const interval = setInterval( authenticate, 25000);    \n    this.state = { interval }\n  }\n  \n  render() {\n    return (\n      <MuiPickersUtilsProvider utils={ MomentUtils } locale=\"ru\" libInstance={ moment }>\n        <div className=\"App\">\n          <AppBar className=\"App-header\" position=\"static\" color=\"default\">\n            <Toolbar>\n              <h1>Медицинское страхование туристов</h1>\n            </Toolbar>\n          </AppBar>\n          <div className=\"App-body\">\n            <Initial />\n            {/* <FizLicoRegForm /> */}\n            {/* <Calculator/> */}\n          </div>\n        </div>\n      </MuiPickersUtilsProvider>\n    );\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.interval)\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}